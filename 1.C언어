#include<stdio.h>//헤더파일 포함
#include<stdlib.h>//rand()의 원형
#include<time.h>//time()의 원형 h는 확장자


#define SIZE 5
int get_result(int a, int b, char c);


int sandclock(void)
{

	int a,q;
	int b, c, d;									//모래시계 상단 변수
	int e, f, g;									//모래시계 하단 변수
	int half = 0;
	while (1)									//무한루프 사용
	{
		printf("모래시계를 몇줄로 만드실겁니까?:");
		scanf_s("%d", &a);

		if (a % 2 == 0)								//입력 변수가 짝수 일 경우
		{
			half = a / 2;
											//왼쪽 위 사다리
			for (b = 1; b <= half; b++)					//짝수의 반만큼 반복
			{
				for (d = 0; d < b; d++)					//위에 for문이 b=1이기 때문에 한번 작동
				{
					printf(" ");					//한번 띄워쓰기 띄워쓰기는 점점 증가
				}
				for (c = half + 1; c > b; c--)				//별표는 점점 감소
				{
					printf("*");						
				}							//오른쪽 사다리
				for (c = half + 1; c > b; c--)				//별표 점점 감소
				{
					printf("*");						
				}
				printf("\n");						//1사분면 사다리 2사분면 사다리 한줄씩 만들고 줄넘김
			}								
			for (b = 1; b <= half; b++)					//왼쪽 밑 사다리 
			{								//짝수의 반만큼 반복 
				for (e = half + 1; e > b; e--)				//띄워쓰기 점점 감소
				{
					printf(" ");					
				}
				for (f = 0; f < b; f++)
				{							//별표 점점 증가
					printf("*");
				}
				for (g = 0; g < b; g++)					//별표 점점 증가
				{
					printf("*");
				}
				printf("\n");						//3사분면 사다리 4사분면 사다리 한줄씩 만들고 줄넘김
			}
		}
		else
		{
			half = a / 2;

											//입력 변수가 홀수 일 경우
			for (b = 1; b <= half+1; b++)					/왼쪽 위 사다리
			{								//2로 나눠준 후 +1번 해준다 ex)7/2+1=4 

				for (d = 0; d < b; d++)					//위에 for문이 b=1이기 때문에 한번 작동
				{
					printf(" ");					//한번 띄워쓰기 띄워쓰기 점점 증가
				}
				for (c = half + 2; c > b; c--)				//별표 점점 감소 half+1에 +2 해주므로 별표 6개
				{
					printf("*");						//결국 b와c가 같아지면 작동 멈춤
				}											
				for (c = half + 1; c > b; c--)				//오른쪽 사다리
				{							//별표 점점 증가 half+1에 +1 해주므로 별표 5
					printf("*");						
				}
				printf("\n");						//1사분면 사다리 2사분면 사다리 한줄씩 만들고 줄넘김
			}
			
			for (b = 0; b < half; b++)					// 7/2=3  3번 실행 
			{
				for (e = half; e > b; e--)				//왼쪽 밑 사다리
				{							//띄워쓰기 3번 실행 후 점점 감소
					printf(" ");
				}
				for (f = 0; f < b + 2; f++)				//별표 1번 실행 후 점점 증가
				{
					printf("*");
				}
				for (g = 0; g < b + 1; g++)				//오른쪽 밑 사다리
				{
					printf("*");					//별표 점점 증가
				}
				printf("\n");						//3사분면 사다리 4사분면 사다리 한줄씩 만들고 줄넘김
			}
		}
		printf("계속 하시겠습니까?(1.계속 2.종료)");	
		scanf_s("%d", &q);
		if (q == 1)								//1을 입력 시 반복
			continue;
		else
			break;								//아닐 시 메인문 무한루프 반복
	}
	return 0;
}
int alignment(void)
{									 
								
	int random[SIZE] = { rand(), rand(),  rand(),  rand(), rand() };		//배열 안에 랜덤 값 5개 부여
	int a, b, c, d, i, j,w, highest, least, temp;

	srand((unsigned)time(NULL));							//컴퓨터 시각으로 시드값 설정
	while (1)									//무한 루프
	{ 
		{

		printf("1번을 누르면 오름차순입니다.\n2번을 누르면 내림차순입니다.\n");
		scanf_s("%d", &a);
		if (a == 1)								//1을 누를 시 오름차순
		{
			for (i = 0; i < SIZE; i++)                    		 	//5번 실행
			{			
				least = i;						//최소 값에 i를 넣어준다
				for (j = i + 1; j < SIZE; j++)				//j는 1이고 밑의 코드를 4번 반복 4번째 비교후 마지막 숫자는 자동으로 제일 큰 수
					if (random[j] < random[least])			//배열인덱스1번(j)ex1 보다 배열인덱스 0번(i)ex2이 크면
						least = j;				//최소값에(0번)>(1번) i에서 j로 변경  ex2 > ex 1로 변경
				temp = random[i];					//배열인덱스 0(i) 번에 있던 숫자를잠시 temp에  에 옮기고
				random[i] = random[least];				//배열인덱스 0번에  기존의 배열인덱스 1번(j)를 넣어주고
				random[least] = temp;					//배열인덱스 1번에  기존의 배열인덱스 0번(i)를 넣어준다 
			}
			for (i = 0; i < SIZE; i++)					//5번 표기하는건데 위에 for문반복5번 후
				printf("%d\n", random[i]);				//인덱스0번 부터 하나씩 표시하는걸 여기 for 문에서 5번 반복
			printf("\n");							
			return 0;							//인덱스1이 인덱스 0보다 값이 작으면 인덱스 1의 값이
		}									//인덱스 0의 값으로 들어감
		else if(a == 2);
		for (c = 0; c < SIZE; c++)
		{
			highest = c;							//같은건데 부등호만 반대로 해주면
			for (d = c + 1; d < SIZE; d++)					//인덱스0번 보다 인덱스1번이 크면 
				if (random[d] > random[highest])			//인덱스1번이 인덱스 0으로 들어감
					highest = d;					//내림차순
			temp = random[c];
			random[c] = random[highest];
			random[highest] = temp;
		}
		for (i = 0; i < SIZE; i++)
			printf("%d\n", random[i]);
		printf("\n");
	}
		
		printf("계속 하시겠습니까?(1.계속 2.종료)");
		scanf_s("%d", &w);

		if (w == 1)
			continue;
		else
			break;
	}
	return 0;
}
int calculator(void)
{
	int a, b,r, re;
	char c = 0;
	while (1)
	{

		printf("첫번째 정수를 입력해주시오 :");
		scanf_s("%d", &a);
		printf("두번째 정수를 입력해주시오 :");
		scanf_s("%d", &b);
		rewind(stdin);
		printf("연산자를 입력해주시오 :");
		scanf_s("%c", &c);
		re = get_result(a, b, c);
		printf("두 정수의 결과 값은:%d입니다.\n", re);

		printf("계속 하시겠습니까?(1.계속 2.종료)");
		scanf_s("%d", &r);
		if (r == 1)
			continue;
		else
			break;
	
	}
	return 0;
}

int get_result(int a, int b, char c)
{
	int result = 0;

	if (c == '+')
		result = ("%d + %d = %d\n", a, b, a + b);
	else if (c == '-')                               //여기서 산술계산기
		result = ("%d - %d = %d\n", a, b, a - b);
	else if (c == '*')
		result = ("%d * %d = %d\n", a, b, a * b);
	else if (c == '/')
		result = ("%d / %d = %d\n", a, b, a / b);

	return result;
}
int main(void)
{
	
		int a;
		while (1)
		{

		printf("******************************************\n");
		printf("실행 할 프로그램의 번호를 누르시오.\n");
		printf("1번 모래시계 2번 정렬 3번 계산기 4번 취소\n");
		printf("******************************************");
		scanf_s("%d", &a);


		if (a == 1)
			sandclock();
		else if (a == 2)
			alignment();
		else if (a == 3)
			calculator();
		else if (a == 4)
			break;
		else
			continue;
	}
}
